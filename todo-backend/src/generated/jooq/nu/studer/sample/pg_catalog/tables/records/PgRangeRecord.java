/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.pg_catalog.tables.records;


import nu.studer.sample.pg_catalog.tables.PgRange;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgRangeRecord extends UpdatableRecordImpl<PgRangeRecord> implements Record7<Long, Long, Long, Long, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_range.rngtypid</code>.
     */
    public void setRngtypid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_range.rngtypid</code>.
     */
    public Long getRngtypid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_range.rngsubtype</code>.
     */
    public void setRngsubtype(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_range.rngsubtype</code>.
     */
    public Long getRngsubtype() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_range.rngmultitypid</code>.
     */
    public void setRngmultitypid(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_range.rngmultitypid</code>.
     */
    public Long getRngmultitypid() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_range.rngcollation</code>.
     */
    public void setRngcollation(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_range.rngcollation</code>.
     */
    public Long getRngcollation() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_range.rngsubopc</code>.
     */
    public void setRngsubopc(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_range.rngsubopc</code>.
     */
    public Long getRngsubopc() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_range.rngcanonical</code>.
     */
    public void setRngcanonical(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_range.rngcanonical</code>.
     */
    public String getRngcanonical() {
        return (String) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_range.rngsubdiff</code>.
     */
    public void setRngsubdiff(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_range.rngsubdiff</code>.
     */
    public String getRngsubdiff() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, Long, Long, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, Long, Long, Long, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PgRange.PG_RANGE.RNGTYPID;
    }

    @Override
    public Field<Long> field2() {
        return PgRange.PG_RANGE.RNGSUBTYPE;
    }

    @Override
    public Field<Long> field3() {
        return PgRange.PG_RANGE.RNGMULTITYPID;
    }

    @Override
    public Field<Long> field4() {
        return PgRange.PG_RANGE.RNGCOLLATION;
    }

    @Override
    public Field<Long> field5() {
        return PgRange.PG_RANGE.RNGSUBOPC;
    }

    @Override
    public Field<String> field6() {
        return PgRange.PG_RANGE.RNGCANONICAL;
    }

    @Override
    public Field<String> field7() {
        return PgRange.PG_RANGE.RNGSUBDIFF;
    }

    @Override
    public Long component1() {
        return getRngtypid();
    }

    @Override
    public Long component2() {
        return getRngsubtype();
    }

    @Override
    public Long component3() {
        return getRngmultitypid();
    }

    @Override
    public Long component4() {
        return getRngcollation();
    }

    @Override
    public Long component5() {
        return getRngsubopc();
    }

    @Override
    public String component6() {
        return getRngcanonical();
    }

    @Override
    public String component7() {
        return getRngsubdiff();
    }

    @Override
    public Long value1() {
        return getRngtypid();
    }

    @Override
    public Long value2() {
        return getRngsubtype();
    }

    @Override
    public Long value3() {
        return getRngmultitypid();
    }

    @Override
    public Long value4() {
        return getRngcollation();
    }

    @Override
    public Long value5() {
        return getRngsubopc();
    }

    @Override
    public String value6() {
        return getRngcanonical();
    }

    @Override
    public String value7() {
        return getRngsubdiff();
    }

    @Override
    public PgRangeRecord value1(Long value) {
        setRngtypid(value);
        return this;
    }

    @Override
    public PgRangeRecord value2(Long value) {
        setRngsubtype(value);
        return this;
    }

    @Override
    public PgRangeRecord value3(Long value) {
        setRngmultitypid(value);
        return this;
    }

    @Override
    public PgRangeRecord value4(Long value) {
        setRngcollation(value);
        return this;
    }

    @Override
    public PgRangeRecord value5(Long value) {
        setRngsubopc(value);
        return this;
    }

    @Override
    public PgRangeRecord value6(String value) {
        setRngcanonical(value);
        return this;
    }

    @Override
    public PgRangeRecord value7(String value) {
        setRngsubdiff(value);
        return this;
    }

    @Override
    public PgRangeRecord values(Long value1, Long value2, Long value3, Long value4, Long value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgRangeRecord
     */
    public PgRangeRecord() {
        super(PgRange.PG_RANGE);
    }

    /**
     * Create a detached, initialised PgRangeRecord
     */
    public PgRangeRecord(Long rngtypid, Long rngsubtype, Long rngmultitypid, Long rngcollation, Long rngsubopc, String rngcanonical, String rngsubdiff) {
        super(PgRange.PG_RANGE);

        setRngtypid(rngtypid);
        setRngsubtype(rngsubtype);
        setRngmultitypid(rngmultitypid);
        setRngcollation(rngcollation);
        setRngsubopc(rngsubopc);
        setRngcanonical(rngcanonical);
        setRngsubdiff(rngsubdiff);
    }
}
