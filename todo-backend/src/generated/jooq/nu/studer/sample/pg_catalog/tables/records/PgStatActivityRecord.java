/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.pg_catalog.tables.records;


import java.time.OffsetDateTime;

import nu.studer.sample.pg_catalog.tables.PgStatActivity;

import org.jooq.Field;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgStatActivityRecord extends TableRecordImpl<PgStatActivityRecord> implements Record22<Long, String, Integer, Integer, Long, String, String, String, String, Integer, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, String, String, String, Long, Long, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.datid</code>.
     */
    public void setDatid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.datid</code>.
     */
    public Long getDatid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.datname</code>.
     */
    public void setDatname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.datname</code>.
     */
    public String getDatname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.pid</code>.
     */
    public void setPid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.pid</code>.
     */
    public Integer getPid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.leader_pid</code>.
     */
    public void setLeaderPid(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.leader_pid</code>.
     */
    public Integer getLeaderPid() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.usesysid</code>.
     */
    public void setUsesysid(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.usesysid</code>.
     */
    public Long getUsesysid() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.usename</code>.
     */
    public void setUsename(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.usename</code>.
     */
    public String getUsename() {
        return (String) get(5);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.application_name</code>.
     */
    public void setApplicationName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.application_name</code>.
     */
    public String getApplicationName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.client_addr</code>.
     */
    public void setClientAddr(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.client_addr</code>.
     */
    public String getClientAddr() {
        return (String) get(7);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.client_hostname</code>.
     */
    public void setClientHostname(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.client_hostname</code>.
     */
    public String getClientHostname() {
        return (String) get(8);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.client_port</code>.
     */
    public void setClientPort(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.client_port</code>.
     */
    public Integer getClientPort() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.backend_start</code>.
     */
    public void setBackendStart(OffsetDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.backend_start</code>.
     */
    public OffsetDateTime getBackendStart() {
        return (OffsetDateTime) get(10);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.xact_start</code>.
     */
    public void setXactStart(OffsetDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.xact_start</code>.
     */
    public OffsetDateTime getXactStart() {
        return (OffsetDateTime) get(11);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.query_start</code>.
     */
    public void setQueryStart(OffsetDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.query_start</code>.
     */
    public OffsetDateTime getQueryStart() {
        return (OffsetDateTime) get(12);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.state_change</code>.
     */
    public void setStateChange(OffsetDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.state_change</code>.
     */
    public OffsetDateTime getStateChange() {
        return (OffsetDateTime) get(13);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.wait_event_type</code>.
     */
    public void setWaitEventType(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.wait_event_type</code>.
     */
    public String getWaitEventType() {
        return (String) get(14);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.wait_event</code>.
     */
    public void setWaitEvent(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.wait_event</code>.
     */
    public String getWaitEvent() {
        return (String) get(15);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.state</code>.
     */
    public void setState(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.state</code>.
     */
    public String getState() {
        return (String) get(16);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.backend_xid</code>.
     */
    public void setBackendXid(Long value) {
        set(17, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.backend_xid</code>.
     */
    public Long getBackendXid() {
        return (Long) get(17);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.backend_xmin</code>.
     */
    public void setBackendXmin(Long value) {
        set(18, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.backend_xmin</code>.
     */
    public Long getBackendXmin() {
        return (Long) get(18);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.query_id</code>.
     */
    public void setQueryId(Long value) {
        set(19, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.query_id</code>.
     */
    public Long getQueryId() {
        return (Long) get(19);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.query</code>.
     */
    public void setQuery(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.query</code>.
     */
    public String getQuery() {
        return (String) get(20);
    }

    /**
     * Setter for <code>pg_catalog.pg_stat_activity.backend_type</code>.
     */
    public void setBackendType(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_stat_activity.backend_type</code>.
     */
    public String getBackendType() {
        return (String) get(21);
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row22<Long, String, Integer, Integer, Long, String, String, String, String, Integer, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, String, String, String, Long, Long, Long, String, String> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    @Override
    public Row22<Long, String, Integer, Integer, Long, String, String, String, String, Integer, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime, String, String, String, Long, Long, Long, String, String> valuesRow() {
        return (Row22) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PgStatActivity.PG_STAT_ACTIVITY.DATID;
    }

    @Override
    public Field<String> field2() {
        return PgStatActivity.PG_STAT_ACTIVITY.DATNAME;
    }

    @Override
    public Field<Integer> field3() {
        return PgStatActivity.PG_STAT_ACTIVITY.PID;
    }

    @Override
    public Field<Integer> field4() {
        return PgStatActivity.PG_STAT_ACTIVITY.LEADER_PID;
    }

    @Override
    public Field<Long> field5() {
        return PgStatActivity.PG_STAT_ACTIVITY.USESYSID;
    }

    @Override
    public Field<String> field6() {
        return PgStatActivity.PG_STAT_ACTIVITY.USENAME;
    }

    @Override
    public Field<String> field7() {
        return PgStatActivity.PG_STAT_ACTIVITY.APPLICATION_NAME;
    }

    @Override
    public Field<String> field8() {
        return PgStatActivity.PG_STAT_ACTIVITY.CLIENT_ADDR;
    }

    @Override
    public Field<String> field9() {
        return PgStatActivity.PG_STAT_ACTIVITY.CLIENT_HOSTNAME;
    }

    @Override
    public Field<Integer> field10() {
        return PgStatActivity.PG_STAT_ACTIVITY.CLIENT_PORT;
    }

    @Override
    public Field<OffsetDateTime> field11() {
        return PgStatActivity.PG_STAT_ACTIVITY.BACKEND_START;
    }

    @Override
    public Field<OffsetDateTime> field12() {
        return PgStatActivity.PG_STAT_ACTIVITY.XACT_START;
    }

    @Override
    public Field<OffsetDateTime> field13() {
        return PgStatActivity.PG_STAT_ACTIVITY.QUERY_START;
    }

    @Override
    public Field<OffsetDateTime> field14() {
        return PgStatActivity.PG_STAT_ACTIVITY.STATE_CHANGE;
    }

    @Override
    public Field<String> field15() {
        return PgStatActivity.PG_STAT_ACTIVITY.WAIT_EVENT_TYPE;
    }

    @Override
    public Field<String> field16() {
        return PgStatActivity.PG_STAT_ACTIVITY.WAIT_EVENT;
    }

    @Override
    public Field<String> field17() {
        return PgStatActivity.PG_STAT_ACTIVITY.STATE;
    }

    @Override
    public Field<Long> field18() {
        return PgStatActivity.PG_STAT_ACTIVITY.BACKEND_XID;
    }

    @Override
    public Field<Long> field19() {
        return PgStatActivity.PG_STAT_ACTIVITY.BACKEND_XMIN;
    }

    @Override
    public Field<Long> field20() {
        return PgStatActivity.PG_STAT_ACTIVITY.QUERY_ID;
    }

    @Override
    public Field<String> field21() {
        return PgStatActivity.PG_STAT_ACTIVITY.QUERY;
    }

    @Override
    public Field<String> field22() {
        return PgStatActivity.PG_STAT_ACTIVITY.BACKEND_TYPE;
    }

    @Override
    public Long component1() {
        return getDatid();
    }

    @Override
    public String component2() {
        return getDatname();
    }

    @Override
    public Integer component3() {
        return getPid();
    }

    @Override
    public Integer component4() {
        return getLeaderPid();
    }

    @Override
    public Long component5() {
        return getUsesysid();
    }

    @Override
    public String component6() {
        return getUsename();
    }

    @Override
    public String component7() {
        return getApplicationName();
    }

    @Override
    public String component8() {
        return getClientAddr();
    }

    @Override
    public String component9() {
        return getClientHostname();
    }

    @Override
    public Integer component10() {
        return getClientPort();
    }

    @Override
    public OffsetDateTime component11() {
        return getBackendStart();
    }

    @Override
    public OffsetDateTime component12() {
        return getXactStart();
    }

    @Override
    public OffsetDateTime component13() {
        return getQueryStart();
    }

    @Override
    public OffsetDateTime component14() {
        return getStateChange();
    }

    @Override
    public String component15() {
        return getWaitEventType();
    }

    @Override
    public String component16() {
        return getWaitEvent();
    }

    @Override
    public String component17() {
        return getState();
    }

    @Override
    public Long component18() {
        return getBackendXid();
    }

    @Override
    public Long component19() {
        return getBackendXmin();
    }

    @Override
    public Long component20() {
        return getQueryId();
    }

    @Override
    public String component21() {
        return getQuery();
    }

    @Override
    public String component22() {
        return getBackendType();
    }

    @Override
    public Long value1() {
        return getDatid();
    }

    @Override
    public String value2() {
        return getDatname();
    }

    @Override
    public Integer value3() {
        return getPid();
    }

    @Override
    public Integer value4() {
        return getLeaderPid();
    }

    @Override
    public Long value5() {
        return getUsesysid();
    }

    @Override
    public String value6() {
        return getUsename();
    }

    @Override
    public String value7() {
        return getApplicationName();
    }

    @Override
    public String value8() {
        return getClientAddr();
    }

    @Override
    public String value9() {
        return getClientHostname();
    }

    @Override
    public Integer value10() {
        return getClientPort();
    }

    @Override
    public OffsetDateTime value11() {
        return getBackendStart();
    }

    @Override
    public OffsetDateTime value12() {
        return getXactStart();
    }

    @Override
    public OffsetDateTime value13() {
        return getQueryStart();
    }

    @Override
    public OffsetDateTime value14() {
        return getStateChange();
    }

    @Override
    public String value15() {
        return getWaitEventType();
    }

    @Override
    public String value16() {
        return getWaitEvent();
    }

    @Override
    public String value17() {
        return getState();
    }

    @Override
    public Long value18() {
        return getBackendXid();
    }

    @Override
    public Long value19() {
        return getBackendXmin();
    }

    @Override
    public Long value20() {
        return getQueryId();
    }

    @Override
    public String value21() {
        return getQuery();
    }

    @Override
    public String value22() {
        return getBackendType();
    }

    @Override
    public PgStatActivityRecord value1(Long value) {
        setDatid(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value2(String value) {
        setDatname(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value3(Integer value) {
        setPid(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value4(Integer value) {
        setLeaderPid(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value5(Long value) {
        setUsesysid(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value6(String value) {
        setUsename(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value7(String value) {
        setApplicationName(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value8(String value) {
        setClientAddr(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value9(String value) {
        setClientHostname(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value10(Integer value) {
        setClientPort(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value11(OffsetDateTime value) {
        setBackendStart(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value12(OffsetDateTime value) {
        setXactStart(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value13(OffsetDateTime value) {
        setQueryStart(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value14(OffsetDateTime value) {
        setStateChange(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value15(String value) {
        setWaitEventType(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value16(String value) {
        setWaitEvent(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value17(String value) {
        setState(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value18(Long value) {
        setBackendXid(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value19(Long value) {
        setBackendXmin(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value20(Long value) {
        setQueryId(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value21(String value) {
        setQuery(value);
        return this;
    }

    @Override
    public PgStatActivityRecord value22(String value) {
        setBackendType(value);
        return this;
    }

    @Override
    public PgStatActivityRecord values(Long value1, String value2, Integer value3, Integer value4, Long value5, String value6, String value7, String value8, String value9, Integer value10, OffsetDateTime value11, OffsetDateTime value12, OffsetDateTime value13, OffsetDateTime value14, String value15, String value16, String value17, Long value18, Long value19, Long value20, String value21, String value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgStatActivityRecord
     */
    public PgStatActivityRecord() {
        super(PgStatActivity.PG_STAT_ACTIVITY);
    }

    /**
     * Create a detached, initialised PgStatActivityRecord
     */
    public PgStatActivityRecord(Long datid, String datname, Integer pid, Integer leaderPid, Long usesysid, String usename, String applicationName, String clientAddr, String clientHostname, Integer clientPort, OffsetDateTime backendStart, OffsetDateTime xactStart, OffsetDateTime queryStart, OffsetDateTime stateChange, String waitEventType, String waitEvent, String state, Long backendXid, Long backendXmin, Long queryId, String query, String backendType) {
        super(PgStatActivity.PG_STAT_ACTIVITY);

        setDatid(datid);
        setDatname(datname);
        setPid(pid);
        setLeaderPid(leaderPid);
        setUsesysid(usesysid);
        setUsename(usename);
        setApplicationName(applicationName);
        setClientAddr(clientAddr);
        setClientHostname(clientHostname);
        setClientPort(clientPort);
        setBackendStart(backendStart);
        setXactStart(xactStart);
        setQueryStart(queryStart);
        setStateChange(stateChange);
        setWaitEventType(waitEventType);
        setWaitEvent(waitEvent);
        setState(state);
        setBackendXid(backendXid);
        setBackendXmin(backendXmin);
        setQueryId(queryId);
        setQuery(query);
        setBackendType(backendType);
    }
}
