/*
 * This file is generated by jOOQ.
 */
package nu.studer.sample.pg_catalog.tables.records;


import nu.studer.sample.pg_catalog.tables.PgTransform;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgTransformRecord extends UpdatableRecordImpl<PgTransformRecord> implements Record5<Long, Long, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>pg_catalog.pg_transform.oid</code>.
     */
    public void setOid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_transform.oid</code>.
     */
    public Long getOid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>pg_catalog.pg_transform.trftype</code>.
     */
    public void setTrftype(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_transform.trftype</code>.
     */
    public Long getTrftype() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>pg_catalog.pg_transform.trflang</code>.
     */
    public void setTrflang(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_transform.trflang</code>.
     */
    public Long getTrflang() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>pg_catalog.pg_transform.trffromsql</code>.
     */
    public void setTrffromsql(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_transform.trffromsql</code>.
     */
    public String getTrffromsql() {
        return (String) get(3);
    }

    /**
     * Setter for <code>pg_catalog.pg_transform.trftosql</code>.
     */
    public void setTrftosql(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>pg_catalog.pg_transform.trftosql</code>.
     */
    public String getTrftosql() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PgTransform.PG_TRANSFORM.OID;
    }

    @Override
    public Field<Long> field2() {
        return PgTransform.PG_TRANSFORM.TRFTYPE;
    }

    @Override
    public Field<Long> field3() {
        return PgTransform.PG_TRANSFORM.TRFLANG;
    }

    @Override
    public Field<String> field4() {
        return PgTransform.PG_TRANSFORM.TRFFROMSQL;
    }

    @Override
    public Field<String> field5() {
        return PgTransform.PG_TRANSFORM.TRFTOSQL;
    }

    @Override
    public Long component1() {
        return getOid();
    }

    @Override
    public Long component2() {
        return getTrftype();
    }

    @Override
    public Long component3() {
        return getTrflang();
    }

    @Override
    public String component4() {
        return getTrffromsql();
    }

    @Override
    public String component5() {
        return getTrftosql();
    }

    @Override
    public Long value1() {
        return getOid();
    }

    @Override
    public Long value2() {
        return getTrftype();
    }

    @Override
    public Long value3() {
        return getTrflang();
    }

    @Override
    public String value4() {
        return getTrffromsql();
    }

    @Override
    public String value5() {
        return getTrftosql();
    }

    @Override
    public PgTransformRecord value1(Long value) {
        setOid(value);
        return this;
    }

    @Override
    public PgTransformRecord value2(Long value) {
        setTrftype(value);
        return this;
    }

    @Override
    public PgTransformRecord value3(Long value) {
        setTrflang(value);
        return this;
    }

    @Override
    public PgTransformRecord value4(String value) {
        setTrffromsql(value);
        return this;
    }

    @Override
    public PgTransformRecord value5(String value) {
        setTrftosql(value);
        return this;
    }

    @Override
    public PgTransformRecord values(Long value1, Long value2, Long value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PgTransformRecord
     */
    public PgTransformRecord() {
        super(PgTransform.PG_TRANSFORM);
    }

    /**
     * Create a detached, initialised PgTransformRecord
     */
    public PgTransformRecord(Long oid, Long trftype, Long trflang, String trffromsql, String trftosql) {
        super(PgTransform.PG_TRANSFORM);

        setOid(oid);
        setTrftype(trftype);
        setTrflang(trflang);
        setTrffromsql(trffromsql);
        setTrftosql(trftosql);
    }
}
